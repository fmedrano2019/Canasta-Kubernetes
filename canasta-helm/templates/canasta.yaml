apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.canastaSettings.configName }}
data:
{{ (.Files.Glob .Values.canastaSettings.settingsFolder).AsConfig | indent 2 }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.canastaConfig.configName }}
data:
{{ ( tpl (.Files.Glob .Values.canastaConfig.configFolder).AsConfig .) | indent 2 }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.canastaEnv.configName }}
data:
{{ (.Files.Glob ".env").AsConfig | indent 2 }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    app: {{ .Values.canastaAppName }}
  ports:
    - protocol: TCP
      port: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.sitemapData.claimName }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "200Mi"
  volumeMode: Filesystem

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.elasticsearchData.claimName }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.canastaAppName }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.canastaAppName }}
    spec:
      containers:
      - name: web
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        resources: {}
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: {{ .Values.canastaEnv.configName }}
        volumeMounts:
        - mountPath: /var/www/mediawiki/w/user-extensions
          name: {{ .Values.configVolume.volumeName }}
          subPath: ./extensions
        - mountPath: /var/www/mediawiki/w/user-skins
          name: {{ .Values.configVolume.volumeName }}
          subPath: ./skins
        - mountPath: /mediawiki/config
          name: {{ .Values.canastaConfig.volumeName }}
        - mountPath: /mediawiki/config/settings
          name: {{ .Values.canastaSettings.volumeName }}
        - mountPath: /mediawiki/images
          name: {{ .Values.configVolume.volumeName }}
          subPath: ./images
        - name: {{ .Values.sitemapData.volumeName }}
          mountPath: /mediawiki/sitemap
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        env:
        - name: discovery.type
          value: single-node
        - name: bootstrap.memory_lock
          value: "true"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        ports:
        - containerPort: 9200
        resources:
          requests:
            memory: "2Gi"
        volumeMounts:
        - name: {{ .Values.elasticsearchData.volumeName }}
          mountPath: /usr/share/elasticsearch/data
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
      volumes:
      - name: {{ .Values.canastaConfig.volumeName }}
        configMap:
          name: {{ .Values.canastaConfig.configName }}
      - name: {{ .Values.canastaSettings.volumeName }}
        configMap:
          name: {{ .Values.canastaSettings.configName }}
      - name: {{ .Values.configVolume.volumeName }}
        hostPath:
          path: {{ .Values.configVolume.hostPath }}
          type: DirectoryOrCreate
      - name: {{ .Values.sitemapData.volumeName }}
        persistentVolumeClaim:
          claimName: {{ .Values.sitemapData.claimName }}
      - name: {{ .Values.elasticsearchData.volumeName }}
        persistentVolumeClaim:
          claimName: {{ .Values.elasticsearchData.claimName }}